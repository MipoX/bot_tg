from typing import IO, List, Dict, Optional
import telebot
from telebot import types
import random

from api_site.utils.product_obj import Product
from common_utils import Setting
from api_site import main as get_api
from common_utils import logger
from data_users.models.history import History
from tg_bot.bot_utils.bot_data import get_text_help, get_text_about, create_date_favorite
from tg_bot.bot_utils.cache_foto import CacheFoto
from tg_bot.bot_utils.read_pattern_util import read_pattern
from tg_bot.bot_utils.manager_db_util import ManagerDB


class Bot:
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π PyTeleBotAPI.
    –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ c –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥ run().

    Attributes:
        __text_help (str): –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—è "–ü–æ–º–æ—â—å".
        __about_text (str): –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é "–æ –±–æ—Ç–µ".
        bot : –ö–ª–∞—Å—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telebot

    Methods:
         start_menu(): –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é, –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∫–æ—Ä–æ—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
         main_menu(): –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.
         main_click_menu(): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –º–µ–Ω—é –±–æ—Ç–∞.
         history_menu(): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—Ä–æ—Å–∞—Ö.
         helper(): –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–ª–∞–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.
         next_menu_for_custom_request(): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –≤ "/custom" –º–µ–Ω—é.
         input_search_supplies_menu(): –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.
         check_text_for_requests_menu(): –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–æ–¥–∞.
         result_price_menu(): –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –≤ –º–µ–Ω—é.
         learn_result(): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –≤ –º–µ–Ω—é –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
         product_search_menu(): "/custom" –º–µ–Ω—é.
         about_menu(): –ú–µ–Ω—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞ –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç "/help".
         run(): –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –Ω–µ–º,
         –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    Notes:
        –ö–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –µ–µ –≤—ã–≤–æ–¥–∞
            –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
            –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ —Å–±–æ—Ä –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite3 –∏—Å–ø–æ–ª—å–∑—É—è ORM peewee –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–µ—é.
            –¢–∞–∫ –∂–µ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω—ã –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Å API —Å–∞–π—Ç–∞.
             –ò —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
             –Ω–∞ —ç–∫—Ä–∞–Ω –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º, –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞.
    """
    __text_help: str = get_text_help()
    __about_text: str = get_text_about()

    def __init__(self) -> None:
        """
            Params:
                bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
                data: Dict: –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
                page: Dict: –ò–Ω–¥–µ–∫—Å—ã —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
                param: bool: –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫–æ–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å.
                sort: bool: –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–∏–ø —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
                cache_foto: –•—Ä–∞–Ω–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–¥–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –≤ –∫–µ—à–µ.
                favorite_dict: Dict: –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        """

        self.bot = telebot.TeleBot(Setting.get_token_tg())
        self.data: Dict = {}
        self.page: Dict = {}
        self.param: Dict = {}
        self.sort: Dict = {}
        self.favorite_dict_cache: Dict = {}
        self.cache_foto = CacheFoto()
        self.favorite_dict: Dict = {}

    def start_menu(self, message: telebot.types.Message) -> None:
        """
        –ú–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è.
        """
        text_output: str = (f'–¥–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ üëã, {message.from_user.first_name}!\n'
                            f'–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ –≤–∞–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. üíª')
        file_picture: IO[bytes] = open('./logo.webp', 'rb')
        self.bot.send_photo(message.chat.id, file_picture)
        self.bot.send_message(message.chat.id, text_output)
        self.main_menu(message)

    def main_menu(self, message: telebot.types.Message) -> None:
        """
        –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞. –ì–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
        –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º.
        """
        text: str = f'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ'
        marcup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_about = types.KeyboardButton('o –±–æ—Ç–µ üß∏')
        button_search = types.KeyboardButton('–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π ‚öôÔ∏è')
        button_only_result = types.KeyboardButton('–ù–∞–π—Ç–∏ –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç üîé')
        button_max_result = types.KeyboardButton('–ù–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ üîç')
        button_help = types.KeyboardButton('–ü–æ–º–æ—â—å üí°')
        button_story = types.KeyboardButton('–ò—Å—Ç–æ—Ä–∏—è üìù')
        favorite_button = types.KeyboardButton('–ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚≠êÔ∏è')
        marcup.row(button_search)
        marcup.row(button_only_result, button_max_result)
        marcup.row(button_about, button_story)
        marcup.row(button_help, favorite_button)
        self.bot.send_message(message.chat.id, text, reply_markup=marcup)
        self.bot.register_next_step_handler(message, self.main_click_menu)

    def main_click_menu(self, message: telebot.types.Message) -> None:
        """
        –î–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –º–µ—Ç–æ–¥ –∑–∞–¥–∞–≤–∞—è
        —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –°–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç
        –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –±—É–¥–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º
        —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.
        """
        match message.text.lower():
            case command if '/start' in command or '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' in command or 'main' in command:
                self.main_menu(message)
            case command if 'o –±–æ—Ç–µ' in command or '/about' in command:
                self.about_menu(message)
            case command if '–ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π' in command or '/custom' in command:
                self.product_search_menu(message)
            case command if '–Ω–∞–π—Ç–∏ –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç' in command or '/low' in command:
                self.param[message.chat.id] = False
                self.input_search_supplies_menu(message)
            case command if "–Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" in command or "/high" in command:
                self.param[message.chat.id] = True
                self.input_search_supplies_menu(message)
            case command if '–ø–æ–º–æ—â—å' in command or '/help' in command:
                self.helper(message)
            case command if '–∏—Å—Ç–æ—Ä–∏—è' in command or "/history" in command:
                self.history_menu(message)
            case command if '–∏–∑–±—Ä–∞–Ω–Ω–æ–µ' in command or '/favorite' in command:
                self.page[message.chat.id] = 0
                self.create_date_favorite(message)
                self.favorite_menu(message)
            case _:
                self.bot.send_message(message.chat.id, '–ü–æ—Ö–æ–∂–µ –≤—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∏ —Ç–æ.\n '
                                                       '–í–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é')
                self.main_menu(message)

    def history_menu(self, message: telebot.types.Message) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –∑–∞–ø—Ä–æ—Å–∞—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω.
        –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –∏—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞.
        Notes:
            –ú–µ—Ç–æ–¥ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –ë–î. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞. –ü–æ—Å–ª–µ —á–µ–≥–æ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª.
            –ó–∞—Ç–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫
            –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º "./api_site/utils/requests/".
        Raises:
            TypeError: –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±—É–¥–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –ø–æ—Å–ª–µ —á–µ–≥–æ
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –æ–± —ç—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        """

        try:
            history: List[History] = ManagerDB.read_history(message.from_user.id)
            if len(history) > 0:
                buttons = types.InlineKeyboardMarkup()

                for story in history:  # –û–±—Ö–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
                    match story.method:
                        case command if 'down /custom' in command:
                            command = 'üìâ /custom'
                        case command if 'up /custom' in command:
                            command = 'üìà /custom'
                        case command if 'def /custom' in command:
                            command = 'üìä /custom'
                        case command if 'one /low' in command:
                            command = 'üîé /low'
                        case command if 'max /high' in command:
                            command = 'üîç /high'

                    button = types.InlineKeyboardButton(''.join(f'{command}: {story.request}'
                                                                f''), callback_data=f'{command} {story.request}')
                    buttons.add(button)
                self.bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è...', reply_markup=buttons)
            else:
                raise TypeError(history)
        except TypeError as err:
            logger.info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–î –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username} :{err=}")
            self.bot.send_message(message.chat.id, '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö.')

    def helper(self, message: telebot.types.Message) -> None:
        """
        –ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –¥–∞–Ω–Ω–æ–º—É –º–µ—Ç–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–µ—Ä–µ—á–µ–Ω—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ –±–æ—Ç–µ.
        """
        self.bot.send_message(message.chat.id, self.__text_help)
        marcup_under = types.ReplyKeyboardMarkup(resize_keyboard=True)
        print(type(marcup_under))
        butt = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        marcup_under.add(butt)
        self.bot.send_message(message.chat.id, '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥, –Ω–∞–∂–º–∏—Ç–µ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=marcup_under)

    def next_menu_for_custom_request(self, message: telebot.types.Message) -> None:
        """
        –î–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –º–µ—Ç–æ–¥ –∑–∞–¥–∞–≤–∞—è
        —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –°–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç
        –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é. –û–± —ç—Ç–æ–º –Ω–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫ –∫–∞–∫ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
        –±–æ—Ç–∞.
        """
        self.param[message.chat.id] = None
        match message.text.lower():
            case command if '—Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏' in command:
                self.sort[message.chat.id] = None
                self.input_search_supplies_menu(message)
            case command if "—Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã" in command:
                self.sort[message.chat.id] = False
                self.input_search_supplies_menu(message)
            case command if "—Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã" in command:
                self.sort[message.chat.id] = True
                self.input_search_supplies_menu(message)
            case _:
                self.main_click_menu(message)

    def input_search_supplies_menu(self, message: telebot.types.Message) -> None:
        """
        –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–∂–∏–¥–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏—Ö –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç
        –≤ –º–µ—Ç–æ–¥ check_text_for_requests_menu().

        Params:
            message: –û–±—ä–µ–∫—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PyTeleBotAPI, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Å—Å–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.

        """

        text_supplies_menu: str = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ... üñç'
        self.bot.send_message(message.chat.id, text_supplies_menu, reply_markup=types.ReplyKeyboardRemove())
        self.bot.register_next_step_handler(message, self.check_text_for_requests_menu)

    def check_text_for_requests_menu(self, message: telebot.types.Message, call_func=None) -> None:
        """
        –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å –∫–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç

         Params:
            message: –û–±—ä–µ–∫—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PyTeleBotAPI, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Å—Å–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
            param: bool: –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫–æ–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å.
            sort: bool: –° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–∏–ø —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö.


        Notes:
            –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞, –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞.
            –ì–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–ª–∏–Ω–Ω–∞ —Ç–µ–∫—Å—Ç–∞, –∞ –∑–∞—Ç–µ–º –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
            –≤ –∑–∞–ø—Ä–æ—Å–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ü–∏—Ñ—Ä –∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ "/" –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏.
            –í —Å–ª—É—á–∞–µ –∏—Å—Ç–∏–Ω—ã, –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞—Å—Ü–µ–Ω–µ–Ω–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∫–∞ –≤–≤–µ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞,
            –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–µ—Ç–æ–¥–æ–º main_click_menu(). –ò–Ω–∞—á–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ
            —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º —á—Ç–æ –±—ã–ª –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.
            –ü—Ä–æ–π–¥—è –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è
            –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –ò –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º —á—Ç–æ –Ω–∞—á–∞–ª—Å—è –ø–æ–∏—Å–∫.
            –ü—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞, –≥–¥–µ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ API.
            –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ò –∑–∞—Ç–µ–º –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤
            –¥–∞–ª—å–Ω–µ–π—à–∏–π –º–µ—Ç–æ–¥ result_price_menu().
            –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ None, –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å–ª—É—á–∞–µ False. –ò–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ª—É—á–∞–µ True. –ó–∞—Ç–µ–º —Ç–∞–∫ –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Ç–æ–¥ result_price_menu().

        Raises:
            TypeError: –í–æ–∑–Ω–∏–∫–∞–µ—Ç, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞. –¢–∞–∫ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–æ–∂–µ—Ç —è–≤–ª—è—Ç—å—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.
            –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ –æ–± —ç—Ç–æ–º –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ —Ñ–∞–π–ª–µ.
            –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –º–µ–Ω—é –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ.

        """
        if call_func is None:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤, —Ç–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞.
            text_input_user: str = message.text
        else:
            text_input_user: str = call_func

        text_search: str = '–ü–æ–∏—Å–∫...'
        sort = self.sort.get(message.chat.id)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
        param = self.param.get(message.chat.id)
        try:
            if isinstance(text_input_user, str):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
                if (len(text_input_user) > 30 and not all(True for i in text_input_user if i.isdigit())
                        or (text_input_user.startswith('/'))):

                    if text_input_user.startswith('/'):
                        self.main_click_menu(message)
                    else:
                        self.bot.send_message(message.chat.id, '–ó–∞–ø—Ä–æ—Å –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω.\n'
                                                               '–í–æ–∑–º–æ–∂–Ω–æ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã')
                        self.input_search_supplies_menu(message)
                else:
                    if call_func is None:  # –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å.
                        ManagerDB.write_db_story(id_user=message.from_user.id,
                                                 message=message, param=param, sort=sort)
                    self.bot.send_message(message.chat.id, text_search)
                    # –°–æ–∑–¥–∞–µ–º –∫—ç—à –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
                    self.create_date_favorite(message)
                    self.page[message.chat.id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É

                    if param is None:  # –í—ã–≤–æ–¥ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.
                        result: List[Product] = get_api(method='–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞', product=text_input_user, country='ru',
                                                        language='ru',
                                                        page=2)
                        if sort is True:  # –í—ã–≤–æ–¥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é.
                            self.sort[message.chat.id] = None
                            result = sorted(result, key=lambda x: x.get_price(), reverse=True)

                        elif sort is False:  # –í—ã–≤–æ–¥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é.
                            self.sort[message.chat.id] = None
                            result = sorted(result, key=lambda x: x.get_price(), reverse=False)

                        if len(result) > 15:
                            self.data[message.chat.id] = result[:15]

                        else:
                            self.data[message.chat.id] = result
                        self.result_price_menu(message)

                    elif param is False:  # –í—ã–¥–∞–µ–º –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        self.param[message.chat.id] = None
                        result: List[Product] = [random.choice(
                            get_api(method='–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞', product=text_input_user, country='ru', language='ru',
                                    page=1))]
                        self.data[message.chat.id] = result
                        self.result_price_menu(message)

                    else:  # –í—ã–¥–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤=30, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ç—å –¥–æ page += 1.
                        result: List[Product] = get_api(method='–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞', product=text_input_user, country='ru',
                                                        language='ru',
                                                        page=3)
                        self.data[message.chat.id] = result
                        self.param[message.chat.id] = None
                        self.result_price_menu(message)
            else:
                raise TypeError('–ù–µ –≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.')

        except TypeError as err:
            logger.error(
                f'tg_bot/tg_bot_util.py –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username}'
                f', –∑–∞–ø—Ä–æ—Å {message.text}, param = {param}, sort = {sort}.  TypeError: {err}', )
            self.bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            self.main_click_menu(message)

    def result_price_menu(self, message: telebot.types.Message, previous_message=None,
                          favorite_add: Optional[bool] = False, favorite_del: Optional[bool] = False) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≤–∏–¥–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è,
        –æ–ø–∏—Å–∞–Ω–∏—è, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –¥–æ—Å—Ç–∞–≤–∫–∏, —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ —Ü–µ–Ω—ã.

        Params:
            message: –û–±—ä–µ–∫—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ PyTeleBotAPI, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Å—Å–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
            product: List[Product] : –û–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ.
            previous_message: (boll): –ü–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
            favorite_add: Optional[bool]: –ü–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ.
            favorite_del: Optional[bool]: –ü–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.


        Notes:
            –Ø–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ—Ç–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∑–∞–ø—Ä–æ—Å–∞
            –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –ù–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–ø–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±—É–¥–µ—Ç –∏–Ω–æ–π
            —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError. –ò–Ω–∞—á–µ –≤ —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω
            –∏–Ω–¥–µ–∫—Å (page_num) –∏ –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –±—É–¥–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            –Ω–∞ —ç–∫—Ä–∞–Ω. –ó–∞—Ç–µ–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
            —Ç–æ–≥–æ —á—Ç–æ, —á—Ç–æ –±—ã–ª–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏, –∞ —Ç–∞–∫ –∂–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å,
            –≥–¥–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–≤–∞—Ä–æ–º.
            –ü—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –º–µ–Ω—é —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å–∏—Ç—É–∞—Ç–∏–≤–Ω–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é.
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é: –º–µ–Ω—é –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ,
            —Å—Å—ã–ª–∫–∞ –∏ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω –µ–¥–∏–Ω–∏—Ü–µ, —Ç–æ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è
            –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é. –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –±–æ–ª—å—à–µ –Ω—É–ª—è,
            –Ω–æ –º–µ–Ω—å—à–µ –¥–ª–∏–Ω—ã —Å–ø–∏—Å–∫–∞ -2, —Ç–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤–ø–µ—Ä–µ–¥ –∏ –Ω–∞–∑–∞–¥.
            –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å —Ä–∞–≤–µ–Ω –¥–ª–∏–Ω —Å–ø–∏—Å–∫–∞ -1, —Ç–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞–∑–∞–¥.
            –ê —Ç–∞–∫ –∂–µ, –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–ø–µ—Ä–µ–¥.

        Raises:
             TypeError: –í–æ–∑–Ω–∏–∫–∞–µ—Ç, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º
             —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞. –¢–∞–∫ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–æ–∂–µ—Ç —è–≤–ª—è—Ç—å—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.
             –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ –æ–± —ç—Ç–æ–º –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ —Ñ–∞–π–ª–µ.
             –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –º–µ–Ω—é –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ.

        """
        page_num: int = self.page.get(message.chat.id, 0)  # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ.
        result: list = self.data.get(message.chat.id, None)
        sort: bool = self.sort.get(message.chat.id)
        param: bool = self.param.get(message.chat.id)
        cache_list: List = self.favorite_dict_cache.get(message.chat.id)
        try:
            if isinstance(result, list) and len(result) >= 1:  # –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ.
                text: str = f'–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ‚¨ÖÔ∏è[{page_num + 1}-–π –∏–∑ {len(result)}]‚û°Ô∏è.'
                any_product: Product = result[page_num]
                pattern: str = read_pattern(any_product)
                url: str = any_product.get_offer_page_url()
                pict: bytes = self.cache_foto.check_cache(pattern=pattern, link=any_product.get_link_photo())
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
                marcup_inline = types.InlineKeyboardMarkup()
                marcup_inline.add(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ üîó', url=url))
                button_next = types.InlineKeyboardButton('—Å–ª–µ–¥—É—é—â–∏–π ‚û°', callback_data='next')
                button_back = types.InlineKeyboardButton('‚¨Ö –ø—Ä–µ–¥—ã–¥—É—â–∏–π', callback_data='back')
                button_main = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ', callback_data='main')

                if favorite_add:  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏ —Å–æ–∑–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
                    cache_list.append(url)
                    self.favorite_dict_cache[message.chat.id] = cache_list
                    ManagerDB.write_favorite(id_user=message.chat.id, link_photo=any_product.get_link_photo(),
                                             about=pattern, link_web=url)
                    marker = 'üóë'
                    button_favorite = types.InlineKeyboardButton(f'–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ '
                                                                 f'{marker}', callback_data='favorite_del')

                    marcup_inline.add(button_favorite)

                elif favorite_del:  # –£–¥–∞–ª—è–µ–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ —Å–æ–∑–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
                    cache_list.pop(cache_list.index(url))
                    ManagerDB.del_favorite(id_user=message.chat.id, link=url)
                    marker = '‚≠êÔ∏è'
                    button_favorite = types.InlineKeyboardButton(f'–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'
                                                                 f' {marker}', callback_data='favorite')
                    marcup_inline.add(button_favorite)

                else:
                    #  –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å".
                    if len(self.favorite_dict) > 0 and url in cache_list:
                        marker = 'üóë'
                        button_favorite = types.InlineKeyboardButton(f'–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ '
                                                                     f'{marker}', callback_data='favorite_del')
                        marcup_inline.add(button_favorite)

                    else:
                        marker = '‚≠êÔ∏è'
                        button_favorite = types.InlineKeyboardButton(f'–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ '
                                                                     f'{marker}', callback_data='favorite')
                        marcup_inline.add(button_favorite)

                if len(result) != 1:  # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
                    if (page_num > 0) and (page_num <= len(result) - 2):
                        marcup_inline.add(button_back, button_next)
                    elif page_num == len(result) - 1:
                        marcup_inline.add(button_back)
                    else:
                        marcup_inline.add(button_next)

                marcup_inline.add(button_main)  # –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
                self.bot.send_photo(message.chat.id, pict, caption=f'{pattern}\n{text}', reply_markup=marcup_inline)

                if previous_message is not None:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                    try:
                        self.bot.delete_message(message.chat.id, previous_message.id)
                    except telebot.apihelper.ApiException as er:
                        logger.debug("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.", er)
            else:
                raise TypeError("–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

        except TypeError as err:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –Ω–µ —É–¥–∞—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
            logger.error(
                f'tg_bot/tg_bot_util.py –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username}'
                f' —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞: {result}, –∑–∞–ø—Ä–æ—Å {message.text}, param = {param}, sort = {sort}.'
                f' TypeError: {err}', )
            self.bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            self.input_search_supplies_menu(message)

    def product_search_menu(self, message: telebot.types.Message) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é /custom –º–µ–Ω—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
        """
        text: str = '–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å —Ç–æ–≤–∞—Ä—ã:'
        self.bot.send_message(message.chat.id, text)
        marcup_under = types.ReplyKeyboardMarkup(resize_keyboard=True)
        butt = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ')
        price_butt = types.KeyboardButton("–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ üìä")
        min_price_butt = types.KeyboardButton("–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã üìà")
        max_price_butt = types.KeyboardButton("–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã üìâ")
        marcup_under.add(butt)
        marcup_under.add(price_butt)
        marcup_under.add(max_price_butt)
        marcup_under.add(min_price_butt)
        self.bot.send_message(message.chat.id, '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥, –Ω–∞–∂–º–∏—Ç–µ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ', reply_markup=marcup_under)
        self.bot.register_next_step_handler(message, self.next_menu_for_custom_request)

    def create_date_favorite(self, message: telebot.types.Message) -> None:
        """
        –ú–µ—Ç–æ–¥ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –æ–¥–Ω–æ–∏–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è ./bot_utils/bot_data. –ö–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Params:
            message: –û–±—ä–µ–∫—Ç PyTeleBotAPI.

        Returns:
            None

        Notes:
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤ –ë–î –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤. –ù–æ —ç—Ç–æ—Å –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
            —Å–ª–æ–≤–∞—Ä—å –≥–¥–µ –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –¥–∞–Ω–Ω—ã–º–∏ —è–≤–ª—è—é—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤. –¢–∞–∫ –∂–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –µ—â–µ –æ–¥–∏–Ω
            —Å–ª–æ–≤–∞—Ä—å —Å –ø–æ–¥–æ–±–Ω—ã–º –∫–ª—é—á–æ–º, –Ω–æ –≤ —Å–ø–∏—Å–∫–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ url —Å—Å—ã–ª–∫–∏. –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –ø—Ä–∏
            –æ–±—Ä–∞—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–æ–≤–æ–º—É –ø–∏—Å–∫—É –∏–ª–∏ –∫ –∏—Å—Ç–µ—Ä–∏–∏, –±—ã–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω–µ–µ –±—ã–ª–∏ —É–∂–µ
            –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö. –ß—Ç–æ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ –ø–æ–º–æ–∂–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –ª–µ–≥—á–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å—Ä–µ–¥–∏ –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
        """

        create_data = create_date_favorite(id_user=message.chat.id, favorite_dict=self.favorite_dict,
                                           favorite_dict_cache=self.favorite_dict_cache)
        self.favorite_dict, self.favorite_dict_cache = create_data

    def favorite_menu(self, message: telebot.types.Message, previous_message=None,
                      del_fav: Optional[bool] = False) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        Params:
            del_fav: –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
            previous_message: –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        Returns:
            None
        Notes:
            –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, –≥–¥–µ –≤ —Ö–æ—Ç–µ –µ–≥–æ —Ä–∞–±–æ—Ç—ã, –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
            –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –¢–∞–∫ –∂–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏–Ω—ã —Å–ø–∏—Å–∫–∞ –±—É–¥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
            –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Ç–æ–≤–∞—Ä—É. –ü–æ–∫–∞ —Ç–æ–≤–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ
            —Å–ø–∏—Å–∫–∞. –ü–æ—Å–ª–µ —á–µ–≥–æ –¥–∞–Ω–Ω–∞—è –æ–ø—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–¥ —ç—Ç–∏–º —Ç–æ–≤–∞—Ä–æ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        Raises:
            TypeError: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
            –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        """

        page_num: int = self.page.get(message.chat.id, 0)  # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ.
        favorite_data: List = self.favorite_dict.get(message.chat.id, [])
        list_cache: List = self.favorite_dict_cache.get(message.chat.id)
        try:
            if isinstance(favorite_data, list) and len(favorite_data) > 0:
                any_product: list = favorite_data[page_num]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ.
                url: str = any_product[0]
                marcup_inline = types.InlineKeyboardMarkup()  # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—Ä–∞–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

                if del_fav:  # –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –ë–î.
                    list_cache.pop(list_cache.index(url))
                    any_product: list = favorite_data[page_num]
                    url: str = any_product[0]
                    marcup_inline.add(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ üîó', url=url))
                    ManagerDB.del_favorite(id_user=message.chat.id, link=url)
                    self.create_date_favorite(message)
                else:
                    if url in list_cache:
                        del_fav_butt = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ üóë', callback_data="del_fav")
                        marcup_inline.add(del_fav_butt)
                    marcup_inline.add(types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ üîó', url=url))
                button_next = types.InlineKeyboardButton('—Å–ª–µ–¥—É—é—â–∏–π ‚û°', callback_data='next_favor')
                button_back = types.InlineKeyboardButton('‚¨Ö –ø—Ä–µ–¥—ã–¥—É—â–∏–π', callback_data='back_favor')
                button_main = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ', callback_data='main')
                pict: bytes = self.cache_foto.check_cache(pattern=any_product[2], link=any_product[1])

                if len(favorite_data) != 1:
                    if (page_num > 0) and (page_num <= len(favorite_data) - 2):
                        marcup_inline.add(button_back, button_next)
                    elif page_num >= len(favorite_data) - 1:
                        marcup_inline.add(button_back)
                    else:
                        marcup_inline.add(button_next)
                text: str = f'–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ‚¨ÖÔ∏è[{page_num + 1}-–π –∏–∑ {len(favorite_data)}]‚û°Ô∏è'
                marcup_inline.add(button_main)  # –î–∞–Ω–Ω—ã–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
                self.bot.send_photo(message.chat.id, pict, caption=f'{any_product[2]}\n{text}',
                                    reply_markup=marcup_inline)

                if previous_message is not None:  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                    try:
                        self.bot.delete_message(message.chat.id, previous_message.id)
                    except telebot.apihelper.ApiException as er:
                        logger.debug("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.", er)

            else:
                raise TypeError("–ó–∞–ø—Ä–æ—Å –ë–î –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

        except TypeError as err:  # –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
            logger.info(
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–î –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username} :{err=}")
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
            self.bot.send_message(message.chat.id, '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö.')

    def about_menu(self, message) -> None:
        """
        –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞.
        Notes:
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–µ–º, –æ—Ç –∫—É–¥–∞ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø
             –∫ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã. –ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª—é–±–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–æ—Ç–∞, —á—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –æ—Ç–º–µ–Ω—É –∫–∞–∫–∏—Ö-–ª–∏–±–æ
             –¥–µ–π—Å—Ç–≤–∏–π, –ø—Ä–∏–º–µ—Ä—É —Ç–∞–∫–∏—Ö –∫–∞–∫ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –º–µ–Ω—é –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞. –ò–ª–∏ –≤ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö,
             –≥–¥–µ –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
        """
        self.bot.send_message(message.chat.id, self.__about_text)
        marcup_under = types.ReplyKeyboardMarkup(resize_keyboard=True)
        butt = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ')
        marcup_under.add(butt)
        self.bot.send_message(message.chat.id, '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥, –Ω–∞–∂–º–∏—Ç–µ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìÉ', reply_markup=marcup_under)
        self.bot.register_next_step_handler(message, self.main_click_menu)

    def run(self) -> None:
        """
        –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
        """

        @self.bot.message_handler(commands=["start"])
        def start(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ–∞–Ω—Å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
            """
            self.start_menu(message)

        @self.bot.message_handler(commands=["help"])
        def main_helper(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞.
            """
            self.helper(message)

        @self.bot.message_handler(commands=['history'])
        def main_history(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            """
            self.history_menu(message)

        @self.bot.message_handler(commands=['low'])
        def main_low(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –º–µ–Ω—é –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
            """
            self.param[message.chat.id] = False
            self.sort[message.chat.id] = None
            self.input_search_supplies_menu(message)

        @self.bot.message_handler(commands=['high'])
        def main_high(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –º–µ–Ω—é –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
            """
            self.param[message.chat.id] = True
            self.sort[message.chat.id] = None
            self.input_search_supplies_menu(message)

        @self.bot.message_handler(commands=['custom'])
        def main_custom(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Å—Ç–æ–º–Ω–æ–º—É –º–µ–Ω—é.
            """
            self.param[message.chat.id] = None
            self.sort[message.chat.id] = None
            self.product_search_menu(message)

        @self.bot.callback_query_handler(func=lambda callback_query: True)
        def callback(callback_query) -> None:
            """
            –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –ò–Ω–ª–∞–π–Ω –∫–æ–º–∞–Ω–¥—ã, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
             –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –µ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ.
            Args:
                callback_query: –¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è InlineKeyboardMarkup()
            Returns:
                None
            Notes:
                –í –ü–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã.
                –ï—Å–ª–∏ –æ–Ω –Ω–µ –±—É–¥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã, –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –∫–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é —Å–æ–±—ã—Ç–∏–π.
            """

            if 'next_favor' in callback_query.data:
                self.page[callback_query.from_user.id] += 1
                self.favorite_menu(callback_query.message, previous_message=callback_query.message)

            elif 'back_favor' in callback_query.data:
                self.page[callback_query.from_user.id] -= 1
                self.favorite_menu(callback_query.message, previous_message=callback_query.message)

            elif "del_fav" in callback_query.data:
                self.favorite_menu(callback_query.message, previous_message=callback_query.message, del_fav=True)

            elif 'next' in callback_query.data:
                self.page[callback_query.from_user.id] += 1
                self.result_price_menu(callback_query.message, previous_message=callback_query.message,
                                       favorite_add=False)

            elif 'back' in callback_query.data:
                self.page[callback_query.from_user.id] -= 1
                self.result_price_menu(callback_query.message, previous_message=callback_query.message,
                                       favorite_add=False)

            elif "favorite_del" in callback_query.data:
                self.result_price_menu(callback_query.message, previous_message=callback_query.message,
                                       favorite_del=True)

            elif 'favorite' in callback_query.data:
                self.result_price_menu(callback_query.message, previous_message=callback_query.message,
                                       favorite_add=True)

            elif 'main' in callback_query.data:
                self.page[callback_query.from_user.id] = 0
                self.main_menu(callback_query.message)

            elif '/' in callback_query.data:
                self.page[callback_query.from_user.id] = 0

                if len(callback_query.data.split()) > 1:
                    rq: str = "".join(f'{text} ' for text in callback_query.data.split()[2:])[:-1]  # —Å–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å

                    if '/custom' in callback_query.data:
                        self.param[callback_query.from_user.id] = None

                        if 'üìà' in callback_query.data:
                            self.sort[callback_query.from_user.id] = True

                        elif "üìâ" in callback_query.data:
                            self.sort[callback_query.from_user.id] = False

                        elif 'üìä' in callback_query.data:
                            self.sort[callback_query.from_user.id] = None
                        self.check_text_for_requests_menu(callback_query.message, call_func=rq)

                    elif "/high" in callback_query.data and len(callback_query.data) > len('/high'):
                        self.param[callback_query.from_user.id] = True
                        self.check_text_for_requests_menu(callback_query.message, call_func=rq)
                    elif '/low' in callback_query.data and len(callback_query.data) > len('/low'):
                        self.param[callback_query.from_user.id] = False
                        self.check_text_for_requests_menu(callback_query.message, call_func=rq)

        @self.bot.message_handler()
        def remain(message) -> None:
            """
            –ú–µ—Ç–æ–¥ –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ-—Ç–æ —á—Ç–æ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º.
            """
            self.main_click_menu(message)
